name: PPTX to Images Conversion

on:
  push:
    branches:
      - main

jobs:
  convert_to_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo apt-get update 
          sudo apt-get install -y poppler-utils libreoffice

      - name: Find PPTX Files
        id: find_pptx_files
        run: |
          find input/content -name "*.pptx" -type f > pptx_files.txt
          cat pptx_files.txt
          ls -a
          
      - name: Get Repository Name
        id: get_repo_name
        run: |
          # Extract the repository name from $GITHUB_REPOSITORY
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          echo "Repository name without owner: $REPO_NAME"
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT
           
      - name: Convert PPTX to PDF and Images
        run: |

          mkdir "${{steps.get_repo_name.outputs.REPO_NAME}}"
          
          for ppt_file in $(cat pptx_files.txt); do
            ppt_name=$(basename "$ppt_file" .pptx)
            echo "This the ppt file name = $ppt_name, and path is this = $ppt_file"
            
            mkdir -p "$ppt_name/images"
            
            libreoffice --headless --convert-to pdf "$ppt_file"

            pdf_file="$ppt_name.pdf"
            
            pdftoppm -png "$pdf_file" "$ppt_name/images/slide"  # Convert PDF to PNG images, you can use -jpeg for JPEG images
            
            pdftotext "$pdf_file" "$ppt_name/$ppt_name.txt"  # Convert PDF to text file
            
            rm "$pdf_file"
            mv "$ppt_name" "${{steps.get_repo_name.outputs.REPO_NAME}}"
            
          done < pptx_files.txt
          
          ls -a # list the files and folder that were created

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: converted-images-text
          path: "${{steps.get_repo_name.outputs.REPO_NAME}}"
          
          
      - name: Checkout Output Repository
        uses: actions/checkout@v2
        with:
          repository: kreatewebsite/kreate_output
          token: ${{ secrets.TOKEN }}
          ref: main
          
      - name: Remove Folder
        run: |
          ls -a
          folder_path="${{steps.get_repo_name.outputs.REPO_NAME}}"

          if [ -d "$folder_path" ]; then
            echo "Folder exists. Removing it and its sub-folders."
            rm -rf "$folder_path"
          else
            echo "Folder does not exist."
          fi 
          
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: converted-images-text
          path: "${{steps.get_repo_name.outputs.REPO_NAME}}"
      
          
      - name: Checking the present files
        run: |
          ls -a
          
      - name: Commit and Push Image to Output Repository
        run: |
          
          git config --global user.name "Dev-98"
          git config --global user.email "devparker48@gmail.com"
          git add .
          git commit -m "PPTX to images and text conversion done"
          git push origin main
